" Use Vim settings, rather than Vi settings.
" This must be first, because it changes other options as a side effect.
set nocompatible

"==========================================
" Initial Plugin
" Installing plugins run :PlugInstall
" Updating plugins run :PlugUpdate
" Removing pligins run :PlugClean
"==========================================

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

" Colorscheme https://github.com/sainnhe/gruvbox-material
Plug 'sainnhe/gruvbox-material'

" Airline https://github.com/vim-airline/vim-airline
Plug 'vim-airline/vim-airline'

" NERDTREE https://github.com/preservim/nerdtree
Plug 'scrooloose/nerdtree'

" https://github.com/ctrlpvim/ctrlp.vim
Plug 'ctrlpvim/ctrlp.vim'

" Syntax highlight https://github.com/sheerun/vim-polyglot
Plug 'sheerun/vim-polyglot'

" Auto pairs https://github.com/jiangmiao/auto-pairs
Plug 'jiangmiao/auto-pairs'

" Use tab https://github.com/ervandew/supertab
Plug 'ervandew/supertab'

" Asynchronous Lint Engine https://github.com/dense-analysis/ale
Plug 'dense-analysis/ale'

" Python autocompletion https://github.com/davidhalter/jedi-vim
Plug 'davidhalter/jedi-vim'

" Comment stuff out. https://github.com/tpope/vim-commentary
Plug 'tpope/vim-commentary'

" https://github.com/airblade/vim-gitgutter
Plug 'airblade/vim-gitgutter'

" https://github.com/xuyuanp/nerdtree-git-plugin
Plug 'xuyuanp/nerdtree-git-plugin'

call plug#end()


"==========================================
" General Settings
"==========================================

syntax on

set number
set hidden
set showcmd
set autoread
set noshowmode
set history=500
set laststatus=2

" Search
set hlsearch
set smartcase
set incsearch
set ignorecase

" Security
set nomodeline
set modelines=0

" Allow backspace in insert mode
set backspace=indent,eol,start

" Disable cursor blink
set gcr=a:blinkon0

" Always show current position
set ruler

" Fold
set nofoldenable
set foldnestmax=3
set foldmethod=indent

" Tab autocomplete and ignore
set wildmode=list:longest,full
set wildignore=*.pyc
set wildignore=*.jpg,*.png,*.gif

" Never recognizes leading zero number as octal number
set nrformats-=octal

filetype plugin on
filetype indent on

set autoindent
set smartindent
set tabstop=4
set shiftwidth=4
set smarttab
set expandtab

let mapleader=","

" Move between windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" Colorscheme config, see :help gruvbox-material.txt
if has('termguicolors')
  set termguicolors
endif
set background=dark
let g:gruvbox_material_background = 'hard'
" let g:gruvbox_material_background = 'soft'
colorscheme gruvbox-material

" NERDTree config
nnoremap <F3> :NERDTreeToggle<CR>
" Exit Vim if NERDTree is the only window remaining in the only tab.
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif

" Airline config
let g:airline_theme = 'gruvbox_material'
let g:airline_section_z = airline#section#create(['%v %l/%L'])
let g:airline_section_y = airline#section#create_right([])
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_close_button = 0
let g:airline#extensions#tabline#tab_nr_type = 1
let g:airline#extensions#tabline#buffer_idx_mode = 1
let g:airline#extensions#ale#enabled = 1
nmap <leader>1 <Plug>AirlineSelectTab1
nmap <leader>2 <Plug>AirlineSelectTab2
nmap <leader>3 <Plug>AirlineSelectTab3
nmap <leader>4 <Plug>AirlineSelectTab4
nmap <leader>5 <Plug>AirlineSelectTab5
nmap <leader>6 <Plug>AirlineSelectTab6
nmap <leader>7 <Plug>AirlineSelectTab7
nmap <leader>8 <Plug>AirlineSelectTab8
nmap <leader>9 <Plug>AirlineSelectTab9
nmap <leader>0 <Plug>AirlineSelectTab0
nmap <leader>- <Plug>AirlineSelectPrevTab
nmap <leader>+ <Plug>AirlineSelectNextTab
set t_Co=256

" Jedi config
" let g:jedi#use_tabs_not_buffers = 1
autocmd FileType python setlocal completeopt-=preview

" ALE config
let g:ale_linters = {
\   'python': ['flake8', 'mypy'],
\}
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '%severity%: %s [%linter%]'
let g:ale_fix_on_save = 1
let g:ale_fixers = {
\   '*': ['remove_trailing_lines', 'trim_whitespace'],
\   'python': ['black', 'isort'],
\}
" let g:ale_open_list = 1
" let g:ale_keep_list_window_open = 1
